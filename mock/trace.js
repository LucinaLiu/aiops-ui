export default {
  'POST /aiops/trace/trace': (req, res) => {
    const {
      traceState,
      minTraceDuration,
      maxTraceDuration,
      queryOrder,
      paging: { pageNum, pageSize },
    } = req.body;
    let myTraces = [...traces];
    switch (String(traceState)) {
      case 'SUCCESS':
        myTraces = myTraces.filter(val => !val.isError);
        break;
      case 'ERROR':
        myTraces = myTraces.filter(val => val.isError);
        break;
    }
    if (minTraceDuration) {
      myTraces = myTraces.filter(val => val.duration >= minTraceDuration);
    }
    if (maxTraceDuration) {
      myTraces = myTraces.filter(val => val.duration <= maxTraceDuration);
    }
    switch (String(queryOrder)) {
      case 'BY_START_TIME':
        myTraces.sort((a, b) => b.start - a.start);
        break;
      case 'BY_DURATION':
        myTraces.sort((a, b) => b.duration - a.duration);
        break;
    }
    res.end(
      JSON.stringify({
        total: myTraces.length,
        traces: myTraces.slice((pageNum - 1) * pageSize, pageNum * pageSize),
      }),
    );
  },
  'GET /aiops/trace/span': ({ query: { traceId } }, res) => {
    const index =
      parseInt(
        traceId
          .match(/\d/g)
          .slice(0, 10)
          .join(''),
      ) % spans.length;
    res.end(JSON.stringify(spans[index]));
  },
};
const traces = [
  {
    endpointNames: ['/projectC/{value}'],
    duration: 62211,
    start: '1585821752894',
    isError: false,
    id: '1585821751836.67796388.91842',
  },
  {
    endpointNames: ['/projectC/{value}'],
    duration: 62150,
    start: '1585822075256',
    isError: false,
    id: '1585822075153.398272509.16846',
  },
  {
    endpointNames: ['/projectA/test'],
    duration: 8214,
    start: '1585821841919',
    isError: true,
    id: '1585821841919.862520767.41999',
  },
  {
    endpointNames: ['/projectA/test'],
    duration: 8137,
    start: '1585822111718',
    isError: false,
    id: '1585822111718.641466163.97363',
  },
  {
    endpointNames: ['org.skywalking.springcloud.test.projectd.MessageConsumer.consumer()'],
    duration: 3,
    start: '1585822016701',
    isError: false,
    id: '1585822011592.669693347.16819',
  },
  {
    id: '4.49.15863868283530302',
    endpointNames: ['/projectB/{value}'],
    duration: 2588,
    start: '1586386828353',
    isError: false,
  },
  {
    id: '4.49.15863869778890352',
    endpointNames: ['/projectB/{value}'],
    duration: 2521,
    start: '1586386977889',
    isError: false,
  },
  {
    id: '4.43.15863870312190748',
    endpointNames: ['/projectB/{value}'],
    duration: 2513,
    start: '1586387031219',
    isError: false,
  },
  {
    id: '4.41.15863870917330898',
    endpointNames: ['/projectB/{value}'],
    duration: 2407,
    start: '1586387091733',
    isError: false,
  },
  {
    id: '7.20.15863871142074414',
    endpointNames: ['org.skywalking.springcloud.test.projectd.MessageConsumer.consumer()'],
    duration: 2,
    start: '1586387114207',
    isError: false,
  },
  {
    id: '7.20.15863871092054412',
    endpointNames: ['org.skywalking.springcloud.test.projectd.MessageConsumer.consumer()'],
    duration: 2,
    start: '1586387109205',
    isError: false,
  },
  {
    id: '7.20.15863871042044410',
    endpointNames: ['org.skywalking.springcloud.test.projectd.MessageConsumer.consumer()'],
    duration: 1,
    start: '1586387104204',
    isError: false,
  },
];
const spans1 = [
  {
    traceId: 'c5e2c6a8-aa73-4ccc-a20a-f03eadf36e82',
    segmentId: 'c5e2c6a8-aa73-4ccc-a20a-f03eadf36e82',
    spanId: 0,
    parentSpanId: -1,
    refs: [],
    serviceCode: 'load balancer1.system',
    startTime: 1586786940420,
    endTime: 1586786947456,
    endpointName: '/projectA/test',
    type: 'Entry',
    peer: '',
    component: 'Nginx',
    isError: false,
    layer: 'Http',
    tags: [
      { key: 'http.method', value: 'GET' },
      { key: 'http.params', value: 'http://192.168.252.13/projectA/test' },
    ],
    logs: [],
  },
  {
    traceId: 'c5e2c6a8-aa73-4ccc-a20a-f03eadf36e82',
    segmentId: 'c5e2c6a8-aa73-4ccc-a20a-f03eadf36e82',
    spanId: 1,
    parentSpanId: 0,
    refs: [],
    serviceCode: 'load balancer1.system',
    startTime: 1586786940420,
    endTime: 1586786947456,
    endpointName: '/projectA/test',
    type: 'Exit',
    peer: '192.168.252.13:18080',
    component: 'Nginx',
    isError: false,
    layer: 'Http',
    tags: [],
    logs: [],
  },
  {
    traceId: 'c5e2c6a8-aa73-4ccc-a20a-f03eadf36e82',
    segmentId: 'd9fb660b-7e1e-4557-a1e4-8f4c6e783762',
    spanId: 0,
    parentSpanId: -1,
    refs: [
      {
        traceId: 'c5e2c6a8-aa73-4ccc-a20a-f03eadf36e82',
        parentSegmentId: 'c5e2c6a8-aa73-4ccc-a20a-f03eadf36e82',
        parentSpanId: 1,
        type: 'CROSS_PROCESS',
      },
    ],
    serviceCode: 'load balancer2.system',
    startTime: 1586786940421,
    endTime: 1586786947455,
    endpointName: '/projectA/test',
    type: 'Entry',
    peer: '',
    component: 'Nginx',
    isError: false,
    layer: 'Http',
    tags: [
      { key: 'http.method', value: 'GET' },
      { key: 'http.params', value: 'http://proxy.skywalking.com/projectA/test' },
    ],
    logs: [],
  },
  {
    traceId: 'c5e2c6a8-aa73-4ccc-a20a-f03eadf36e82',
    segmentId: 'd9fb660b-7e1e-4557-a1e4-8f4c6e783762',
    spanId: 1,
    parentSpanId: 0,
    refs: [],
    serviceCode: 'load balancer2.system',
    startTime: 1586786940421,
    endTime: 1586786947455,
    endpointName: '/projectA/test',
    type: 'Exit',
    peer: 'upstream:projectA',
    component: 'Nginx',
    isError: false,
    layer: 'Http',
    tags: [],
    logs: [],
  },
  {
    traceId: 'c5e2c6a8-aa73-4ccc-a20a-f03eadf36e82',
    segmentId: 'a40b0b3c180b40eda694e37c96575f97.46.15867869404217100',
    spanId: 0,
    parentSpanId: -1,
    refs: [
      {
        traceId: 'c5e2c6a8-aa73-4ccc-a20a-f03eadf36e82',
        parentSegmentId: 'd9fb660b-7e1e-4557-a1e4-8f4c6e783762',
        parentSpanId: 1,
        type: 'CROSS_PROCESS',
      },
    ],
    serviceCode: 'projectA.business-zone',
    startTime: 1586786940421,
    endTime: 1586786947455,
    endpointName: '/projectA/{name}',
    type: 'Entry',
    peer: '',
    component: 'SpringMVC',
    isError: false,
    layer: 'Http',
    tags: [
      { key: 'url', value: 'http://proxy1.skywalking.com/projectA/test' },
      { key: 'http.method', value: 'GET' },
    ],
    logs: [],
  },
  {
    traceId: 'c5e2c6a8-aa73-4ccc-a20a-f03eadf36e82',
    segmentId: 'a40b0b3c180b40eda694e37c96575f97.46.15867869404217100',
    spanId: 1,
    parentSpanId: 0,
    refs: [],
    serviceCode: 'projectA.business-zone',
    startTime: 1586786940421,
    endTime: 1586786940427,
    endpointName: '/projectB/test',
    type: 'Exit',
    peer: 'PROJECTB:80',
    component: 'SpringRestTemplate',
    isError: false,
    layer: 'Http',
    tags: [
      { key: 'url', value: 'http://PROJECTB:-1/projectB/test' },
      { key: 'http.method', value: 'GET' },
    ],
    logs: [],
  },
  {
    traceId: 'c5e2c6a8-aa73-4ccc-a20a-f03eadf36e82',
    segmentId: 'dcec4edd2aa84827a89e60507f69334d.44.15867869404217080',
    spanId: 0,
    parentSpanId: -1,
    refs: [
      {
        traceId: 'c5e2c6a8-aa73-4ccc-a20a-f03eadf36e82',
        parentSegmentId: 'a40b0b3c180b40eda694e37c96575f97.46.15867869404217100',
        parentSpanId: 1,
        type: 'CROSS_PROCESS',
      },
    ],
    serviceCode: 'projectB.business-zone',
    startTime: 1586786940421,
    endTime: 1586786940427,
    endpointName: '/projectB/{value}',
    type: 'Entry',
    peer: '',
    component: 'SpringMVC',
    isError: false,
    layer: 'Http',
    tags: [
      { key: 'url', value: 'http://192.168.252.12:8762/projectB/test' },
      { key: 'http.method', value: 'GET' },
    ],
    logs: [],
  },
  {
    traceId: 'c5e2c6a8-aa73-4ccc-a20a-f03eadf36e82',
    segmentId: 'dcec4edd2aa84827a89e60507f69334d.44.15867869404217080',
    spanId: 1,
    parentSpanId: 0,
    refs: [],
    serviceCode: 'projectB.business-zone',
    startTime: 1586786940421,
    endTime: 1586786940422,
    endpointName:
      'org.skywalking.springcloud.test.projectb.dao.DatabaseOperateDao.saveUser(java.lang.String)',
    type: 'Local',
    peer: '',
    component: 'Unknown',
    isError: false,
    layer: 'Unknown',
    tags: [{ key: 'user.name', value: 'test' }],
    logs: [],
  },
  {
    traceId: 'c5e2c6a8-aa73-4ccc-a20a-f03eadf36e82',
    segmentId: 'dcec4edd2aa84827a89e60507f69334d.44.15867869404217080',
    spanId: 2,
    parentSpanId: 1,
    refs: [],
    serviceCode: 'projectB.business-zone',
    startTime: 1586786940422,
    endTime: 1586786940422,
    endpointName: 'H2/JDBI/PreparedStatement/execute',
    type: 'Exit',
    peer: 'localhost:-1',
    component: 'h2-jdbc-driver',
    isError: false,
    layer: 'Database',
    tags: [
      { key: 'db.type', value: 'sql' },
      { key: 'db.instance', value: 'test' },
      { key: 'db.statement', value: 'INSERT INTO user(name) VALUES(?)' },
    ],
    logs: [],
  },
  {
    traceId: 'c5e2c6a8-aa73-4ccc-a20a-f03eadf36e82',
    segmentId: 'dcec4edd2aa84827a89e60507f69334d.44.15867869404217080',
    spanId: 3,
    parentSpanId: 0,
    refs: [],
    serviceCode: 'projectB.business-zone',
    startTime: 1586786940422,
    endTime: 1586786940427,
    endpointName: 'selectUser',
    type: 'Local',
    peer: '',
    component: 'Unknown',
    isError: false,
    layer: 'Unknown',
    tags: [{ key: 'user.name', value: 'test' }],
    logs: [],
  },
  {
    traceId: 'c5e2c6a8-aa73-4ccc-a20a-f03eadf36e82',
    segmentId: 'dcec4edd2aa84827a89e60507f69334d.44.15867869404217080',
    spanId: 4,
    parentSpanId: 3,
    refs: [],
    serviceCode: 'projectB.business-zone',
    startTime: 1586786940422,
    endTime: 1586786940427,
    endpointName: 'H2/JDBI/PreparedStatement/execute',
    type: 'Exit',
    peer: 'localhost:-1',
    component: 'h2-jdbc-driver',
    isError: false,
    layer: 'Database',
    tags: [
      { key: 'db.type', value: 'sql' },
      { key: 'db.instance', value: 'test' },
      { key: 'db.statement', value: 'SELECT * FROM user WHERE name =?' },
    ],
    logs: [],
  },
  {
    traceId: 'c5e2c6a8-aa73-4ccc-a20a-f03eadf36e82',
    segmentId: 'a40b0b3c180b40eda694e37c96575f97.46.15867869404217100',
    spanId: 2,
    parentSpanId: 0,
    refs: [],
    serviceCode: 'projectA.business-zone',
    startTime: 1586786940427,
    endTime: 1586786947455,
    endpointName: '/projectC/{name}',
    type: 'Exit',
    peer: 'projectC:80',
    component: 'Feign',
    isError: true,
    layer: 'Http',
    tags: [
      { key: 'http.method', value: 'GET' },
      { key: 'url', value: 'http://projectC/projectC/test' },
    ],
    logs: [],
  },
  {
    traceId: 'c5e2c6a8-aa73-4ccc-a20a-f03eadf36e82',
    segmentId: 'b40f1dac66a042c9a60efcd63e279ec1.48.15867869404270434',
    spanId: 0,
    parentSpanId: -1,
    refs: [
      {
        traceId: 'c5e2c6a8-aa73-4ccc-a20a-f03eadf36e82',
        parentSegmentId: 'a40b0b3c180b40eda694e37c96575f97.46.15867869404217100',
        parentSpanId: 2,
        type: 'CROSS_PROCESS',
      },
    ],
    serviceCode: 'projectC.business-zone',
    startTime: 1586786940427,
    endTime: 1586787003454,
    endpointName: '/projectC/{value}',
    type: 'Entry',
    peer: '',
    component: 'SpringMVC',
    isError: false,
    layer: 'Http',
    tags: [
      { key: 'url', value: 'http://192.168.252.13:8763/projectC/test' },
      { key: 'http.method', value: 'GET' },
    ],
    logs: [],
  },
  {
    traceId: 'c5e2c6a8-aa73-4ccc-a20a-f03eadf36e82',
    segmentId: 'b40f1dac66a042c9a60efcd63e279ec1.48.15867869404270434',
    spanId: 1,
    parentSpanId: 0,
    refs: [],
    serviceCode: 'projectC.business-zone',
    startTime: 1586786942428,
    endTime: 1586786943452,
    endpointName: '/',
    type: 'Exit',
    peer: 'www.baidu.com:80',
    component: 'HttpClient',
    isError: false,
    layer: 'Http',
    tags: [{ key: 'url', value: 'http://www.baidu.com' }, { key: 'http.method', value: 'GET' }],
    logs: [],
  },
  {
    traceId: 'c5e2c6a8-aa73-4ccc-a20a-f03eadf36e82',
    segmentId: 'b40f1dac66a042c9a60efcd63e279ec1.48.15867869404270434',
    spanId: 2,
    parentSpanId: 0,
    refs: [],
    serviceCode: 'projectC.business-zone',
    startTime: 1586786943453,
    endTime: 1586787003453,
    endpointName: 'Kafka/test-trace-topic/Producer',
    type: 'Exit',
    peer: '127.0.0.1:9092',
    component: 'kafka-producer',
    isError: false,
    layer: 'MQ',
    tags: [
      { key: 'mq.broker', value: '127.0.0.1:9092' },
      { key: 'mq.topic', value: 'test-trace-topic' },
    ],
    logs: [],
  },
  {
    traceId: 'c5e2c6a8-aa73-4ccc-a20a-f03eadf36e82',
    segmentId: '1ff230b6a1e44d35a6ca733b4bc65be7.46.15867869454292850',
    spanId: 0,
    parentSpanId: -1,
    refs: [
      {
        traceId: 'c5e2c6a8-aa73-4ccc-a20a-f03eadf36e82',
        parentSegmentId: 'a40b0b3c180b40eda694e37c96575f97.46.15867869404217100',
        parentSpanId: 2,
        type: 'CROSS_PROCESS',
      },
    ],
    serviceCode: 'projectC.business-zone',
    startTime: 1586786945429,
    endTime: 1586786947455,
    endpointName: '/projectC/{value}',
    type: 'Entry',
    peer: '',
    component: 'SpringMVC',
    isError: false,
    layer: 'Http',
    tags: [
      { key: 'url', value: 'http://192.168.252.12:8763/projectC/test' },
      { key: 'http.method', value: 'GET' },
    ],
    logs: [],
  },
  {
    traceId: 'c5e2c6a8-aa73-4ccc-a20a-f03eadf36e82',
    segmentId: '1ff230b6a1e44d35a6ca733b4bc65be7.46.15867869454292850',
    spanId: 1,
    parentSpanId: 0,
    refs: [],
    serviceCode: 'projectC.business-zone',
    startTime: 1586786947430,
    endTime: 1586786947453,
    endpointName: '/',
    type: 'Exit',
    peer: 'www.baidu.com:80',
    component: 'HttpClient',
    isError: false,
    layer: 'Http',
    tags: [{ key: 'url', value: 'http://www.baidu.com' }, { key: 'http.method', value: 'GET' }],
    logs: [],
  },
  {
    traceId: 'c5e2c6a8-aa73-4ccc-a20a-f03eadf36e82',
    segmentId: '1ff230b6a1e44d35a6ca733b4bc65be7.46.15867869454292850',
    spanId: 2,
    parentSpanId: 0,
    refs: [],
    serviceCode: 'projectC.business-zone',
    startTime: 1586786947453,
    endTime: 1586786947454,
    endpointName: 'Kafka/test-trace-topic/Producer',
    type: 'Exit',
    peer: '127.0.0.1:9092',
    component: 'kafka-producer',
    isError: false,
    layer: 'MQ',
    tags: [
      { key: 'mq.broker', value: '127.0.0.1:9092' },
      { key: 'mq.topic', value: 'test-trace-topic' },
    ],
    logs: [],
  },
  {
    traceId: 'c5e2c6a8-aa73-4ccc-a20a-f03eadf36e82',
    segmentId: 'a85896957bc64ca5ae88a8400a4f17bc.20.15867869573088230',
    spanId: 1,
    parentSpanId: 0,
    refs: [
      {
        traceId: 'c5e2c6a8-aa73-4ccc-a20a-f03eadf36e82',
        parentSegmentId: '1ff230b6a1e44d35a6ca733b4bc65be7.46.15867869454292850',
        parentSpanId: 2,
        type: 'CROSS_PROCESS',
      },
      {
        traceId: '4a0b3b16-a188-4059-93a8-f17358e7aab2',
        parentSegmentId: '1ff230b6a1e44d35a6ca733b4bc65be7.48.15867869475973028',
        parentSpanId: 2,
        type: 'CROSS_PROCESS',
      },
    ],
    serviceCode: 'projectD.business-zone',
    startTime: 1586786957308,
    endTime: 1586786957308,
    endpointName: 'Kafka/test-trace-topic/Consumer/test',
    type: 'Entry',
    peer: '',
    component: 'kafka-consumer',
    isError: false,
    layer: 'MQ',
    tags: [
      { key: 'mq.broker', value: '127.0.0.1:9092' },
      { key: 'mq.topic', value: 'test-trace-topic' },
    ],
    logs: [],
  },
  {
    traceId: 'c5e2c6a8-aa73-4ccc-a20a-f03eadf36e82',
    segmentId: 'a85896957bc64ca5ae88a8400a4f17bc.20.15867869573088230',
    spanId: 0,
    parentSpanId: -1,
    refs: [],
    serviceCode: 'projectD.business-zone',
    startTime: 1586786957308,
    endTime: 1586786957309,
    endpointName: 'org.skywalking.springcloud.test.projectd.MessageConsumer.consumer()',
    type: 'Local',
    peer: '',
    component: 'Unknown',
    isError: false,
    layer: 'Unknown',
    tags: [],
    logs: [],
  },
];

const spans2 = [
  {
    traceId: 'e06983c8-3108-40e5-9cd5-4ba6eb181ca0',
    segmentId: 'e06983c8-3108-40e5-9cd5-4ba6eb181ca0',
    spanId: 0,
    parentSpanId: -1,
    refs: [],
    serviceCode: 'load balancer1.system',
    startTime: 1586853576847,
    endTime: 1586853581939,
    endpointName: '/projectA/test',
    type: 'Entry',
    peer: '',
    component: 'Nginx',
    isError: false,
    layer: 'Http',
    tags: [
      { key: 'http.method', value: 'GET' },
      { key: 'http.params', value: 'http://192.168.252.13/projectA/test' },
    ],
    logs: [],
  },
  {
    traceId: 'e06983c8-3108-40e5-9cd5-4ba6eb181ca0',
    segmentId: 'e06983c8-3108-40e5-9cd5-4ba6eb181ca0',
    spanId: 1,
    parentSpanId: 0,
    refs: [],
    serviceCode: 'load balancer1.system',
    startTime: 1586853576847,
    endTime: 1586853581939,
    endpointName: '/projectA/test',
    type: 'Exit',
    peer: '192.168.252.13:18080',
    component: 'Nginx',
    isError: false,
    layer: 'Http',
    tags: [],
    logs: [],
  },
  {
    traceId: 'e06983c8-3108-40e5-9cd5-4ba6eb181ca0',
    segmentId: 'd4249ef3-051f-4d56-a119-e440b7559f56',
    spanId: 0,
    parentSpanId: -1,
    refs: [
      {
        traceId: 'e06983c8-3108-40e5-9cd5-4ba6eb181ca0',
        parentSegmentId: 'e06983c8-3108-40e5-9cd5-4ba6eb181ca0',
        parentSpanId: 1,
        type: 'CROSS_PROCESS',
      },
    ],
    serviceCode: 'load balancer2.system',
    startTime: 1586853576847,
    endTime: 1586853581938,
    endpointName: '/projectA/test',
    type: 'Entry',
    peer: '',
    component: 'Nginx',
    isError: false,
    layer: 'Http',
    tags: [
      { key: 'http.method', value: 'GET' },
      { key: 'http.params', value: 'http://proxy.skywalking.com/projectA/test' },
    ],
    logs: [],
  },
  {
    traceId: 'e06983c8-3108-40e5-9cd5-4ba6eb181ca0',
    segmentId: 'd4249ef3-051f-4d56-a119-e440b7559f56',
    spanId: 1,
    parentSpanId: 0,
    refs: [],
    serviceCode: 'load balancer2.system',
    startTime: 1586853576847,
    endTime: 1586853581938,
    endpointName: '/projectA/test',
    type: 'Exit',
    peer: 'upstream:projectA',
    component: 'Nginx',
    isError: false,
    layer: 'Http',
    tags: [],
    logs: [],
  },
  {
    traceId: 'e06983c8-3108-40e5-9cd5-4ba6eb181ca0',
    segmentId: '9513f492d4184b1299924b1a5e47ac16.46.15868535768470336',
    spanId: 0,
    parentSpanId: -1,
    refs: [
      {
        traceId: 'e06983c8-3108-40e5-9cd5-4ba6eb181ca0',
        parentSegmentId: 'd4249ef3-051f-4d56-a119-e440b7559f56',
        parentSpanId: 1,
        type: 'CROSS_PROCESS',
      },
    ],
    serviceCode: 'projectA.business-zone',
    startTime: 1586853576847,
    endTime: 1586853581938,
    endpointName: '/projectA/{name}',
    type: 'Entry',
    peer: '',
    component: 'SpringMVC',
    isError: false,
    layer: 'Http',
    tags: [
      { key: 'url', value: 'http://proxy1.skywalking.com/projectA/test' },
      { key: 'http.method', value: 'GET' },
    ],
    logs: [],
  },
  {
    traceId: 'e06983c8-3108-40e5-9cd5-4ba6eb181ca0',
    segmentId: '9513f492d4184b1299924b1a5e47ac16.46.15868535768470336',
    spanId: 1,
    parentSpanId: 0,
    refs: [],
    serviceCode: 'projectA.business-zone',
    startTime: 1586853576847,
    endTime: 1586853576867,
    endpointName: '/projectB/test',
    type: 'Exit',
    peer: 'PROJECTB:80',
    component: 'SpringRestTemplate',
    isError: false,
    layer: 'Http',
    tags: [
      { key: 'url', value: 'http://PROJECTB:-1/projectB/test' },
      { key: 'http.method', value: 'GET' },
    ],
    logs: [],
  },
  {
    traceId: 'e06983c8-3108-40e5-9cd5-4ba6eb181ca0',
    segmentId: 'dcec4edd2aa84827a89e60507f69334d.48.15868535768470198',
    spanId: 0,
    parentSpanId: -1,
    refs: [
      {
        traceId: 'e06983c8-3108-40e5-9cd5-4ba6eb181ca0',
        parentSegmentId: '9513f492d4184b1299924b1a5e47ac16.46.15868535768470336',
        parentSpanId: 1,
        type: 'CROSS_PROCESS',
      },
    ],
    serviceCode: 'projectB.business-zone',
    startTime: 1586853576847,
    endTime: 1586853576867,
    endpointName: '/projectB/{value}',
    type: 'Entry',
    peer: '',
    component: 'SpringMVC',
    isError: false,
    layer: 'Http',
    tags: [
      { key: 'url', value: 'http://192.168.252.12:8762/projectB/test' },
      { key: 'http.method', value: 'GET' },
    ],
    logs: [],
  },
  {
    traceId: 'e06983c8-3108-40e5-9cd5-4ba6eb181ca0',
    segmentId: 'dcec4edd2aa84827a89e60507f69334d.48.15868535768470198',
    spanId: 1,
    parentSpanId: 0,
    refs: [],
    serviceCode: 'projectB.business-zone',
    startTime: 1586853576848,
    endTime: 1586853576848,
    endpointName:
      'org.skywalking.springcloud.test.projectb.dao.DatabaseOperateDao.saveUser(java.lang.String)',
    type: 'Local',
    peer: '',
    component: 'Unknown',
    isError: false,
    layer: 'Unknown',
    tags: [{ key: 'user.name', value: 'test' }],
    logs: [],
  },
  {
    traceId: 'e06983c8-3108-40e5-9cd5-4ba6eb181ca0',
    segmentId: 'dcec4edd2aa84827a89e60507f69334d.48.15868535768470198',
    spanId: 2,
    parentSpanId: 1,
    refs: [],
    serviceCode: 'projectB.business-zone',
    startTime: 1586853576848,
    endTime: 1586853576848,
    endpointName: 'H2/JDBI/PreparedStatement/execute',
    type: 'Exit',
    peer: 'localhost:-1',
    component: 'h2-jdbc-driver',
    isError: false,
    layer: 'Database',
    tags: [
      { key: 'db.type', value: 'sql' },
      { key: 'db.instance', value: 'test' },
      { key: 'db.statement', value: 'INSERT INTO user(name) VALUES(?)' },
    ],
    logs: [],
  },
  {
    traceId: 'e06983c8-3108-40e5-9cd5-4ba6eb181ca0',
    segmentId: 'dcec4edd2aa84827a89e60507f69334d.48.15868535768470198',
    spanId: 3,
    parentSpanId: 0,
    refs: [],
    serviceCode: 'projectB.business-zone',
    startTime: 1586853576848,
    endTime: 1586853576867,
    endpointName: 'selectUser',
    type: 'Local',
    peer: '',
    component: 'Unknown',
    isError: false,
    layer: 'Unknown',
    tags: [{ key: 'user.name', value: 'test' }],
    logs: [],
  },
  {
    traceId: 'e06983c8-3108-40e5-9cd5-4ba6eb181ca0',
    segmentId: 'dcec4edd2aa84827a89e60507f69334d.48.15868535768470198',
    spanId: 4,
    parentSpanId: 3,
    refs: [],
    serviceCode: 'projectB.business-zone',
    startTime: 1586853576848,
    endTime: 1586853576867,
    endpointName: 'H2/JDBI/PreparedStatement/execute',
    type: 'Exit',
    peer: 'localhost:-1',
    component: 'h2-jdbc-driver',
    isError: false,
    layer: 'Database',
    tags: [
      { key: 'db.type', value: 'sql' },
      { key: 'db.instance', value: 'test' },
      { key: 'db.statement', value: 'SELECT * FROM user WHERE name =?' },
    ],
    logs: [],
  },
  {
    traceId: 'e06983c8-3108-40e5-9cd5-4ba6eb181ca0',
    segmentId: '9513f492d4184b1299924b1a5e47ac16.46.15868535768470336',
    spanId: 2,
    parentSpanId: 0,
    refs: [],
    serviceCode: 'projectA.business-zone',
    startTime: 1586853576867,
    endTime: 1586853581938,
    endpointName: '/projectC/{name}',
    type: 'Exit',
    peer: 'projectC:80',
    component: 'Feign',
    isError: true,
    layer: 'Http',
    tags: [
      { key: 'http.method', value: 'GET' },
      { key: 'url', value: 'http://projectC/projectC/test' },
    ],
    logs: [],
  },
  {
    traceId: 'e06983c8-3108-40e5-9cd5-4ba6eb181ca0',
    segmentId: '1ff230b6a1e44d35a6ca733b4bc65be7.52.15868535818745150',
    spanId: 0,
    parentSpanId: -1,
    refs: [
      {
        traceId: 'e06983c8-3108-40e5-9cd5-4ba6eb181ca0',
        parentSegmentId: '9513f492d4184b1299924b1a5e47ac16.46.15868535768470336',
        parentSpanId: 2,
        type: 'CROSS_PROCESS',
      },
    ],
    serviceCode: 'projectC.business-zone',
    startTime: 1586853581874,
    endTime: 1586853581938,
    endpointName: '/projectC/{value}',
    type: 'Entry',
    peer: '',
    component: 'SpringMVC',
    isError: false,
    layer: 'Http',
    tags: [
      { key: 'url', value: 'http://192.168.252.12:8763/projectC/test' },
      { key: 'http.method', value: 'GET' },
    ],
    logs: [],
  },
  {
    traceId: 'e06983c8-3108-40e5-9cd5-4ba6eb181ca0',
    segmentId: '1ff230b6a1e44d35a6ca733b4bc65be7.52.15868535818745150',
    spanId: 1,
    parentSpanId: 0,
    refs: [],
    serviceCode: 'projectC.business-zone',
    startTime: 1586853581875,
    endTime: 1586853581935,
    endpointName: '/',
    type: 'Exit',
    peer: 'www.baidu.com:80',
    component: 'HttpClient',
    isError: false,
    layer: 'Http',
    tags: [{ key: 'url', value: 'http://www.baidu.com' }, { key: 'http.method', value: 'GET' }],
    logs: [],
  },
  {
    traceId: 'e06983c8-3108-40e5-9cd5-4ba6eb181ca0',
    segmentId: '1ff230b6a1e44d35a6ca733b4bc65be7.52.15868535818745150',
    spanId: 2,
    parentSpanId: 0,
    refs: [],
    serviceCode: 'projectC.business-zone',
    startTime: 1586853581936,
    endTime: 1586853581937,
    endpointName: 'Kafka/test-trace-topic/Producer',
    type: 'Exit',
    peer: '127.0.0.1:9092',
    component: 'kafka-producer',
    isError: false,
    layer: 'MQ',
    tags: [
      { key: 'mq.broker', value: '127.0.0.1:9092' },
      { key: 'mq.topic', value: 'test-trace-topic' },
    ],
    logs: [],
  },
  {
    traceId: 'e06983c8-3108-40e5-9cd5-4ba6eb181ca0',
    segmentId: 'b40f1dac66a042c9a60efcd63e279ec1.72.15868535768681826',
    spanId: 0,
    parentSpanId: -1,
    refs: [
      {
        traceId: 'e06983c8-3108-40e5-9cd5-4ba6eb181ca0',
        parentSegmentId: '9513f492d4184b1299924b1a5e47ac16.46.15868535768470336',
        parentSpanId: 2,
        type: 'CROSS_PROCESS',
      },
    ],
    serviceCode: 'projectC.business-zone',
    startTime: 1586853576868,
    endTime: 1586853638934,
    endpointName: '/projectC/{value}',
    type: 'Entry',
    peer: '',
    component: 'SpringMVC',
    isError: false,
    layer: 'Http',
    tags: [
      { key: 'url', value: 'http://192.168.252.13:8763/projectC/test' },
      { key: 'http.method', value: 'GET' },
    ],
    logs: [],
  },
  {
    traceId: 'e06983c8-3108-40e5-9cd5-4ba6eb181ca0',
    segmentId: 'b40f1dac66a042c9a60efcd63e279ec1.72.15868535768681826',
    spanId: 1,
    parentSpanId: 0,
    refs: [],
    serviceCode: 'projectC.business-zone',
    startTime: 1586853578868,
    endTime: 1586853578932,
    endpointName: '/',
    type: 'Exit',
    peer: 'www.baidu.com:80',
    component: 'HttpClient',
    isError: false,
    layer: 'Http',
    tags: [{ key: 'url', value: 'http://www.baidu.com' }, { key: 'http.method', value: 'GET' }],
    logs: [],
  },
  {
    traceId: 'e06983c8-3108-40e5-9cd5-4ba6eb181ca0',
    segmentId: 'b40f1dac66a042c9a60efcd63e279ec1.72.15868535768681826',
    spanId: 2,
    parentSpanId: 0,
    refs: [],
    serviceCode: 'projectC.business-zone',
    startTime: 1586853578933,
    endTime: 1586853638933,
    endpointName: 'Kafka/test-trace-topic/Producer',
    type: 'Exit',
    peer: '127.0.0.1:9092',
    component: 'kafka-producer',
    isError: false,
    layer: 'MQ',
    tags: [
      { key: 'mq.broker', value: '127.0.0.1:9092' },
      { key: 'mq.topic', value: 'test-trace-topic' },
    ],
    logs: [],
  },
];

const spans3 = [
  {
    traceId: '2.62.15852946784720005',
    segmentId: '2.62.15852946784720004',
    spanId: 0,
    parentSpanId: -1,
    refs: [],
    serviceCode: 'Account',
    startTime: 1585294678472,
    endTime: 1585294678780,
    endpointName: '/',
    type: 'Entry',
    peer: '',
    component: 'SpringMVC',
    isError: true,
    layer: 'Http',
    tags: [
      { key: 'url', value: 'http://172.18.0.7:6000/accounts/' },
      { key: 'http.method', value: 'POST' },
      { key: 'status_code', value: '500' },
    ],
    logs: [
      {
        time: 1585294678736,
        data: [
          { key: 'event', value: 'error' },
          { key: 'error.kind', value: 'com.netﬂix.hystrix.exception.HystrixRuntimeException' },
          {
            key: 'message',
            value: 'AuthServiceClient#createUser(User) failed and no fallback availabl e.',
          },
          {
            key: 'stack',
            value:
              'com.netﬂix.hystrix.exception.HystrixRuntimeException: AuthServi ceClient#createUser(User) failed and no fallback available. \nat com.netﬂix.hystrix.AbstractCommand$22.call(AbstractCommand.java: 819)\nat com.netﬂix.hystrix.AbstractCommand$22.call(AbstractCommand.java: 804)\nat rx.internal.operators.OperatorOnErrorResumeNextViaFunction$4.onError(OperatorOnErr orResumeNextViaFunction.java:（以下⼿动略去n⾏）………',
          },
        ],
      },
      {
        time: 1585294678766,
        data: [
          { key: 'event', value: 'error' },
          { key: 'error.kind', value: 'org.springframework.web.util.NestedServletException' },
          {
            key: 'message',
            value:
              'Request processing failed; nested exception is com.netﬂix.hystrix.e xception.HystrixRuntimeException: AuthServiceClient#createUser(User) failed and no fallback ava ilable.',
          },
          {
            key: 'stack',
            value:
              'org.springframework.web.util.NestedServletException: Request pro cessing failed; nested exception is com.netﬂix.hystrix.exception.HystrixRuntimeException: AuthSe rviceClient#createUser(User) failed and no fallback available. \nat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java: 982)\nat org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java: 877)\nat javax.servlet.http.HttpServlet.service(HttpServlet.java:（以下⼿动略去n⾏）………',
          },
        ],
      },
      { time: 1585294678768, data: [{ key: 'forward-url', value: '/accounts/error' }] },
    ],
  },
  {
    traceId: '2.62.15852946784720005',
    segmentId: '2.231.15852946785280006',
    spanId: 0,
    parentSpanId: -1,
    refs: [
      {
        traceId: '2.62.15852946784720005',
        parentSegmentId: '2.62.15852946784720004',
        parentSpanId: 0,
        type: 'CROSS_THREAD',
      },
    ],
    serviceCode: 'Account',
    startTime: 1585294678528,
    endTime: 1585294678731,
    endpointName: 'Hystrix/AuthServiceClient#createUser(User)/Execution',
    type: 'Local',
    peer: '',
    component: 'Hystrix',
    isError: true,
    layer: 'Unknown',
    tags: [],
    logs: [
      {
        time: 1585294678731,
        data: [
          { key: 'event', value: 'error' },
          {
            key: 'error.kind',
            value: 'feign.FeignException',
          },
          {
            key: 'message',
            value:
              'status 500 reading AuthServiceClient#createUser(User); content: \n{"timestamp":"2020-03-27T07:37:58.726+0000","status":500,"error": "Internal Server Error","message":"user already exists: lian","path":"/uaa/users"}',
          },
          {
            key: 'stack',
            value:
              'feign.FeignException: status 500 reading AuthServiceClient#create User(User); content:\n{"timestamp":"2020-03-27T07:37:58.726+0000","status":500,"error": "Internal Server Error","message":"user already exists: lian","path":"/uaa/users"} \nat feign.FeignException.errorStatus(FeignException.java:（以下⼿动略去n⾏）……..',
          },
        ],
      },
    ],
  },
  {
    traceId: '2.62.15852946784720005',
    segmentId: '2.231.15852946785280006',
    spanId: 1,
    parentSpanId: 0,
    refs: [],
    serviceCode: 'Account',
    startTime: 1585294678531,
    endTime: 1585294678594,
    endpointName: '/uaa/oauth/token',
    type: 'Exit',
    peer: 'auth-service:5000',
    component: 'SpringRestTemplate',
    isError: false,
    layer: 'Http',
    tags: [
      { key: 'url', value: 'http://auth-service:5000/uaa/oauth/token' },
      { key: 'http.method', value: 'POST' },
    ],
    logs: [],
  },
  {
    traceId: '2.62.15852946784720005',
    segmentId: '2.231.15852946785280006',
    spanId: 2,
    parentSpanId: 0,
    refs: [],
    serviceCode: 'Account',
    startTime: 1585294678600,
    endTime: 1585294678729,
    endpointName: '/uaa/users',
    type: 'Exit',
    peer: '172.18.0.13:5000',
    component: 'Feign',
    isError: true,
    layer: 'Http',
    tags: [
      { key: 'http.method', value: 'POST' },
      { key: 'url', value: 'http://172.18.0.13:5000/uaa/users' },
      { key: 'status_code', value: '500' },
    ],
    logs: [],
  },
  {
    traceId: '2.62.15852946784720005',
    segmentId: '2.231.15852946787330008',
    spanId: 0,
    parentSpanId: -1,
    refs: [
      {
        traceId: '2.62.15852946784720005',
        parentSegmentId: '2.231.15852946785280006',
        parentSpanId: 0,
        type: 'CROSS_THREAD',
      },
    ],
    serviceCode: 'Account',
    startTime: 1585294678733,
    endTime: 1585294678734,
    endpointName: 'Hystrix/AuthServiceClient#createUser(User)/Fallback',
    type: 'Local',
    peer: '',
    component: 'Hystrix',
    isError: true,
    layer: 'Unknown',
    tags: [],
    logs: [
      {
        time: 1585294678734,
        data: [
          { key: 'event', value: 'error' },
          { key: 'error.kind', value: 'java.lang.UnsupportedOperationException' },
          { key: 'message', value: 'No fallback available.' },
          {
            key: 'stack',
            value:
              'java.lang.UnsupportedOperationException: No fallback available. \nat com.netﬂix.hystrix.HystrixCommand.getFallback(HystrixCommand.java: 293)\nat feign.hystrix.HystrixInvocationHandler$1.getFallback$original$RyPJZvN2(HystrixInvoca tionHandler.java:1（以下⼿动略去n⾏）……….',
          },
        ],
      },
    ],
  },
  {
    traceId: '2.62.15852946784720005',
    segmentId: '2.62.15852946784720004',
    spanId: 1,
    parentSpanId: 0,
    refs: [],
    serviceCode: 'Account',
    startTime: 1585294678510,
    endTime: 1585294678518,
    endpointName: 'MongoDB/FindOperation',
    type: 'Exit',
    peer: 'account-mongodb:27017',
    component: 'mongodb-driver',
    isError: false,
    layer: 'Database',
    tags: [{ key: 'db.type', value: 'MongoDB' }],
    logs: [],
  },
];

const spans = [spans1, spans2, spans3];
